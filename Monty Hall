{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "runs 4\n",
      "wins 0\n",
      "losses 4\n"
     ]
    }
   ],
   "source": [
    "runs = 0\n",
    "wins = 0\n",
    "losses = 0\n",
    "\n",
    "\n",
    "\n",
    "num_runs = 3\n",
    "while runs <= num_runs:\n",
    "    import random\n",
    "    \n",
    "    doors = [\"A\",\"B\", \"C\"]\n",
    "    \n",
    "    \n",
    "    #prize door is randomly assigned. The prize is Spam.\n",
    "    spam = random.choice(doors)\n",
    "\n",
    "    #uncomment the following line to see where the prize is.\n",
    "    #print(\"Spam is in \", spam)\n",
    "\n",
    "    #Program randomly picks a door, like the contestant would\n",
    "    picked_door = random.choice(doors)\n",
    "    #print(\"Picked door is \", picked_door)\n",
    "\n",
    "\n",
    "    #Now, the host opens a door that doesn't contain a prize.\n",
    "    #if the contestant picked a door with a dead parrot, Monty Hall picks the one remaining door that was both not picked \n",
    "    #and doesn't conceal the spam\n",
    "    if picked_door != spam:\n",
    "        door_to_open = list(doors)\n",
    "        door_to_open.remove(spam)\n",
    "        #print(\"removed spam, so door_to_open is\", door_to_open)\n",
    "        door_to_open.remove(picked_door)\n",
    "        open_door = door_to_open[0]\n",
    "    \n",
    "\n",
    "        #print(\"I'll open door\", open_door, \". It's a dead parrot.\")\n",
    "    \n",
    "    #otherwise, if the contestant picked the prize, either of the other two doors can be opened\n",
    "    else:\n",
    "        door_to_open = list(doors)\n",
    "        door_to_open.remove(spam)\n",
    "        open_door = random.choice(door_to_open)\n",
    "        #print(\"I'll open door\",open_door,\". It's a dead parrot\")\n",
    "    \n",
    "    #the alternate door is the one that was neither picked nor opened\n",
    "    alternate = list(doors)\n",
    "    alternate.remove(open_door)\n",
    "    alternate.remove(picked_door)\n",
    "\n",
    "    choices = [\"stay\",\"switch\"]\n",
    "    second_choice = random.choice(choices)\n",
    "    if str(second_choice) == \"switch\":\n",
    "        if list(alternate) == list(spam):\n",
    "            #print(\"You win the Spam!\")\n",
    "            wins += 1\n",
    "        else:\n",
    "            #print(\"Nope, you get a dead parrot.\")\n",
    "            losses += 1\n",
    "        \n",
    "    #if second_choice.title == \"Stay\":\n",
    "    else:\n",
    "        if list(picked_door) == list(spam):\n",
    "            #print(\"You win the Spam!\")\n",
    "            wins += 1\n",
    "        else:\n",
    "            #print(\"Nope, you get a dead parrot.\")\n",
    "            losses += 1\n",
    "                 \n",
    "    runs += 1\n",
    "    \n",
    "if (wins+losses) == runs:\n",
    "    print(\"runs\",num_runs+1)\n",
    "    print(\"wins\",wins)\n",
    "    print(\"losses\", losses)\n"
